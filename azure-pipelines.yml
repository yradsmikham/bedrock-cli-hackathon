trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    exclude:
pr:
  autoCancel: false
  branches:
    include:
    - master
  paths:
    include:
    exclude:


jobs:
- job: Bedrock_CLI_Tests
  displayName: Bedrock CLI Tests
  timeoutInMinutes: 180
  pool:
    vmImage: 'Ubuntu-16.04'
    timeoutInMinutes: 180

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go1.11' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

  steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up Go workspace'

  - script: |
      terraform -version
      wget https://releases.hashicorp.com/terraform/$(tf_version)/terraform_$(tf_version)_linux_amd64.zip -q
      unzip -q terraform_$(tf_version)_linux_amd64.zip
      sudo mv terraform /usr/local/bin
      terraform -version
      curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      chmod +x ./kubectl
      sudo mv ./kubectl /usr/local/bin/kubectl
      curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh
      chmod 700 get_helm.sh
      ./get_helm.sh
    displayName: 'Install terraform, kubectl, helm'

  - script: |
      curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1
    displayName: Install linter

  - script: |
      scripts/build clean
      go mod download
    workingDirectory: "$(modulePath)"
    displayName: "Get Go dependencies"

  - script: |
      golangci-lint run
    workingDirectory: "$(modulePath)"
    displayName: "Lint"

  - script: |
      go test -v -race ./...
    workingDirectory: "$(modulePath)"
    displayName: "Test"
